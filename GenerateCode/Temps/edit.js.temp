
$(function () {

    $('.buttons #btnSave').on('click', function () {
        var $form = $("form.form-horizontal");

        //检测验证结果
        if (!$form.valid()) {
            //设置焦点
            $(".form-group input.error")[0].select();
            $(".form-group input.error")[0].focus();
            return false;
        }
        //当前对象
        var $this = $(this);
        var parentModel = $this.closest('.bootstrap-dialog');
        //关闭按钮X
        var $closeBtn = parentModel.find("button.close");

        var url = $this.data("url");
        //保存
        var btnOriginalText = $this.text();
        var data = $form.serializeArray();
        $.ajax({
            url: url,
            type: "json",
            data: data,
            method: 'post',
            beforeSend: function () {
                $this.attr("disabled", true);
                $closeBtn.attr("disabled", true);
                $this.text("保存中...");
            },
            success: function (result) {
                //记录保存结果
                if (result.Success) {
                    layer.msg(result.Message, { time: 5000 });
                    $this.closest('.bootstrap-dialog').modal('hide');
                } else {
                    if (ResponseError) {
                        ResponseError(result);
                    } else {
                        layer.msg(result.Message, { time: 5000 });
                    }
                }
            },
            error: function (xhr, error, errThrow) {
                layer.msg(errThrow, { time: 5000 });
            },
            complete: function (msg, textStatus) {
                $this.attr("disabled", false);
                $closeBtn.attr("disabled", false);
                $this.text(btnOriginalText);
            }
        });


        //不执行提交动作
        return false;
    });

    //关闭对话框
    $('.buttons #btnClose').on('click',
        function () {
            //当前对象
            var $this = $(this);

            $this.closest('.bootstrap-dialog').modal('hide');
        });

    //输入框焦点事件
    $("input").focus(function () {
        $(this).select();
    });

    $('.first').focus().select();

});

//按钮鼠标事件
$(".form-edit button").keydown(function (e) {
    var buttons = $(".form-edit button");
    var idx = buttons.index(e.target);

    if (e.keyCode === 13) {
        $(this).click();
    }
    if (e.keyCode === 37 && idx === 1) { //左
        $(buttons)[idx - 1].focus();
    }
    if (e.keyCode === 39 && idx === 0) { //右
        $(buttons)[idx + 1].focus();
    }
});

function array_difference(a, b) { // 差集 a - b
    //clone = a
    var clone = a.slice(0);
    for (var i = 0; i < b.length; i++) {
        var temp = b[i];
        for (var j = 0; j < clone.length; j++) {
            if (temp === clone[j]) {
                //remove clone[j]
                clone.splice(j, 1);
            }
        }
    }
    return array_remove_repeat(clone);
}

function array_remove_repeat(a) { // 去重
    var r = [];
    for (var i = 0; i < a.length; i++) {
        var flag = true;
        var temp = a[i];
        for (var j = 0; j < r.length; j++) {
            if (temp === r[j]) {
                flag = false;
                break;
            }
        }
        if (flag) {
            r.push(temp);
        }
    }
    return r;
}

function array_intersection(a, b) { // 交集
    var result = [];
    for (var i = 0; i < b.length; i++) {
        var temp = b[i];
        for (var j = 0; j < a.length; j++) {
            if (temp === a[j]) {
                result.push(temp);
                break;
            }
        }
    }
    return array_remove_repeat(result);
}

function array_union(a, b) { // 并集
    return array_remove_repeat(a.concat(b));
}
